#!/bin/bash -e

# Build script for Xor's Models resource pack
# Yeah, my pack is so cool it has a build script.
# Now with minifying json!

TOP_DIR=`pwd`
ZIPNAME="Xor's 1.8 Models.zip"
WORK_DIR='work'
COPY_DIR="$TOP_DIR"
ZIPDIR="$TOP_DIR"
BUILD_ARGS="$@"

while [[ $# > 0 ]]; do

    key="$1"
    case $key in
        -b|--no-block-items)
            NOBLOCKITEMS='yes'
        ;;
        -o|--output)
            ZIPNAME="$2"
            if [[ "$ZIPNAME" != *.zip ]]; then
                ZIPNAME="$ZIPNAME".zip
            fi
            if [[ `dirname "$ZIPNAME"` != '.' ]]; then
                ZIPDIR=`dirname "$ZIPNAME"`
            fi;
            ZIPNAME=`basename "$ZIPNAME"`
        ;;
        -m|--no-minify)
            NOMINIFY='yes'
        ;;
        -w|--preserve-work-dir)
            PRESERVEWORKDIR='yes'
        ;;
        -u|--collect-cruft)
            COLLECTCRUFT='yes'
        ;;
        -v|--verbose)
            VERBOSITY='yes'
        ;;
        -h|--help|help)
            echo "Buildscript for Xor's 1.8 Models "
            echo "  at commit "`git --no-pager show -q --oneline`
            echo "Compile settings:"
            echo "  -b --no-block-items    : removes block item models"
            echo "  -m --no-minify         : don't minify json"
            echo "  -o --output            : set the output file"
            echo "  -w --preserve-work-dir : don't kill the work dir when  we're done"
            echo "  -u --collect-cruft     : run collectCruft in the workdir" 
            echo "  -v --verbose           : verbose out" 
            echo "  -h --help              : print this message"
            exit 0
        ;;
        *) ;;
    esac
    shift
done

echo 'Preparing workspace...'

rm -rf $WORK_DIR
mkdir $WORK_DIR

cp -r assets $WORK_DIR/assets

cp pack.png pack.mcmeta LICENSE.md $WORK_DIR

cd $WORK_DIR

if [[ -n "$COLLECTCRUFT" ]]; then
    echo 'Collecting cruft...'
    ../collectCruft
fi

if [[ -n "$NOBLOCKITEMS" ]]
then
    echo "Removing block items..."
    cd assets/minecraft/models/item
    for f in `cat "$TOP_DIR"/blockfiles.txt`; do 
        if [[ -n "$VERBOSITY" ]]; then
            echo Removing: $f
        fi 
        rm -f $f # 2> /dev/null
    done
    cd "$TOP_DIR"/"$WORK_DIR"
fi

if [[ -z "$NOMINIFY" ]]; then
    echo 'Minifying json...'
    for f in `find assets -name \*.json -print`
    do
        if [[ -n "$VERBOSITY" ]]; then
            echo Minifying: $f
        fi    
        sed -nf "$TOP_DIR"/comments $f > $f'.tmp'
        cat $f'.tmp' > $f 2> /dev/null
        sed /\"comment\":/d $f > $f'.tmp'
        cat $f'.tmp' > $f 2> /dev/null
        tr -d ' \n\t\r' < $f > $f'.tmp' 2> /dev/null
        cat $f'.tmp' > $f 2> /dev/null
        rm $f'.tmp' 2> /dev/null
    done

    for f in `find assets -name \*.mcmeta -print`
    do
        if [[ -n "$VERBOSITY" ]]; then
            echo Minifying: $f
        fi 
        sed -nf "$TOP_DIR"/comments $f > $f'.tmp'
        cat $f'.tmp' > $f 2> /dev/null
        tr -d ' \n\t\r' < $f > $f'.tmp' 2> /dev/null
        cat $f'.tmp' > $f 2> /dev/null
        rm $f'.tmp' 2> /dev/null
    done
fi

cd ..

# # aux build info to pack into the zip
echo "Writting stuff..."
BUILDINFO="$WORK_DIR/buildinfo"
if [[ -e $BUILDINFO ]]; then
    rm $BUILDINFO
fi

echo "-- This is a bunch of random information about the build, you probably don't care about it." > $BUILDINFO

# git info
git show -q >> $BUILDINFO
echo "" >> $BUILDINFO

# when
echo 'Built on '`date` >> $BUILDINFO

# build options
echo `if [[ -n "$NOBLOCKITEMS" ]]; then echo "Without"; else echo "With"; fi`' block items.' >> $BUILDINFO
if [[ -n "$NOMINIFY" ]]; then echo "Unminified." >> $BUILDINFO; fi
echo "Build command: $0 $BUILD_ARGS" >> $BUILDINFO

# jenkins
if [[ -n "$BUILD_TAG" ]]; then
    echo "$BUILD_TAG" >> $BUILDINFO
    echo "Triggered by commit $GIT_COMMIT" >> $BUILDINFO
fi

# final size of workspace    
echo 'Workspace size: '`du -hs .` >> $BUILDINFO

# build os
echo 'Built on '`uname -rs` >> $BUILDINFO

echo "--" >> $BUILDINFO
# #

echo 'Buiding...'
cd $WORK_DIR 
zip -qr "$ZIPNAME" *
cd ..
if [[ ! -d "$ZIPDIR" ]]; then
    mkdir "$ZIPDIR"
fi
mv "$WORK_DIR"/"$ZIPNAME" "$ZIPDIR"


echo 'Cleaning up...'
if [[ -z $PRESERVEWORKDIR ]]; then
    rm -rf "$WORK_DIR"
fi

